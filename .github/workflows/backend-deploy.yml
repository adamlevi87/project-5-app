name: Backend - Build and Deploy to ECR

on:
  workflow_dispatch:

env:
  AWS_REGION: ${{ vars.AWS_REGION }}
  ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY_BACKEND }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: app/backend

    permissions:
      contents: read
      id-token: write  # Required for OIDC

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Extract short SHA
        id: vars
        run: echo "sha_short=$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_OUTPUT

      - name: Set image tagging variables
        run: |
          IMAGE_BASE="${{ secrets.ECR_REPOSITORY_BACKEND }}"
          TAG="${{ github.run_id }}-${{ steps.vars.outputs.sha_short }}"
          IMAGE_URI="${IMAGE_BASE}:${TAG}"

          echo "IMAGE_BASE=$IMAGE_BASE" >> $GITHUB_ENV
          echo "TAG=$TAG" >> $GITHUB_ENV
          echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV

      - name: Build and push Docker image
        run: |
          docker build --no-cache -t "$IMAGE_URI" .
          docker push "$IMAGE_URI"


      - name: Capture image digest
        id: digest
        run: |
          DIGEST=$(docker inspect --format='{{index .RepoDigests 0}}' "$IMAGE_URI")
          echo "digest=$DIGEST" >> $GITHUB_OUTPUT

      - name: Output summary
        run: |
          echo "Backend image built and pushed:"
          echo "- Image: ${{ steps.digest.outputs.digest }}"
