# Important: This file is used by .generate-env.sh to generate the full variable list
# to later be used by docker compose (.env) 
# these variables will be built using the .generate-env.sh:
# REACT_APP_BACKEND_URL SQS_QUEUE_UR= AWS_ENDPOINT
# Pay Attention to the comments marked with by # !!!
# Also, some variables are hard linked to their Docker Compose
#   Service names (defined by the block name in the yml)

# AWS_ENDPOINT is the endpoint of your localstack when used locally

# AWS Variables
AWS_REGION=us-east-1
AWS_ACCESS_KEY_ID=test
AWS_SECRET_ACCESS_KEY=test


# POSTGRES Variables
POSTGRES_VERSION=14
POSTGRES_TABLE=messages
POSTGRES_USER=myapp
POSTGRES_PASSWORD=password
POSTGRES_DB=myapp_db
POSTGRES_PORT=5432


# LocalStack Variables
LOCALSTACK_IMAGE=localstack/localstack
LOCALSTACK_SERVICES=sqs,s3
QUEUE_NAME=my-queue # !!! Variable name used in generate-env.sh
LOCALSTACK_PORT=4566 # !!! Variable name used in generate-env.sh
    ##### Variable name matches the service name of the Localstack block in the docker-compose file
        LOCALSTACK_HOST=localstack # !!! Variable name used in generate-env.sh
        LOCALSTACK_HOST_EXTERNAL=192.168.241.128  # the IP of the VM running docker
    ##### if you change the service name, change the variable


# s3-init Variables
AWS_CLI_IMAGE=amazon/aws-cli
S3_CONTAINER_NAME=s3-init
S3_BUCKET_NAME=myapp-bucket

# Backend Variables
BACKEND_PORT=3000 # !!! Variable name used in generate-env.sh
BACKEND_PORT_INGRESS_CONTROLLER=80 # !!! Variable name used in generate-env.sh
#DB_HOST=postgres
DB_HOST_EXTERNAL=192.168.241.128 # the IP of the VM running docker
    ##### Variable value matches the service name of the backend block in the docker-compose file
        BACKEND_HOST_ADDRESS=backend # !!! Variable name used in generate-env.sh
    ##### if you change the service name, change the variable


# Frontend Variables
# Frontend Variables
    ##### Variable value matches the service name of the frontend block in the docker-compose file
        FRONTEND_HOST_ADDRESS=frontend
    ##### if you change the service name, change the variable
FRONTEND_PORT=80

# Repository URL - local-dockerhub IP
REPOSITORY_ADDRESS=192.168.241.128
REPOSITORY_PORT=5000

# Ingress Controller
INGRESS_REPO_NAME=ingress-nginx
INGRESS_REPO_URL=https://kubernetes.github.io/ingress-nginx
INGRESS_CONTROLLER_SERVICE_TYPE=NodePort
INGRESS_CONTROLLER_CLASS_RESOURCE_NAME=nginx

# This Variable is the TargetPort of the ingress controller (default 80)
# its also set as the Port of the services created [frontend backend]
# this allows the ingress controller to forward traffic to the services
# then each of them uses TargetPort to forward traffic to their pods/apps
INGRESS_CONTROLLER_TARGET_PORT_AND_SERVICES_PORT=80

# Backend on Kubelocal
BACKEND_REPOSITORY_NAME=backend
BACKEND_REPOSITORY_TAG=latest
BACKEND_REPLICA_COUNT=1
BACKEND_SERVICE_TYPE=ClusterIP
BACKEND_INGRESS_ENABLED=true
BACKEND_REWRITE_TARGET=nginx.ingress.kubernetes.io/rewrite-target
BACKEND_REWRITE_VALUE=/

# Frontend on Kubelocal
FRONTEND_REPOSITORY_NAME=frontend
FRONTEND_REPOSITORY_TAG=latest
FRONTEND_REPLICA_COUNT=1
FRONTEND_SERVICE_TYPE=ClusterIP
FRONTEND_INGRESS_ENABLED=true
FRONTEND_HOST=frontend
FRONTEND_REWRITE_TARGET=nginx.ingress.kubernetes.io/rewrite-target
FRONTEND_REWRITE_VALUE=/
